{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-30T07:25:53.196Z",
    "end": "2025-07-30T07:25:57.991Z",
    "duration": 4795,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "110d0e6e-f1c5-4694-96fc-0d4d36fa7437",
      "title": "",
      "fullFile": "cypress\\e2e\\postAPITest.cy.js",
      "file": "cypress\\e2e\\postAPITest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e483da7-8117-4795-8118-872784fcafc1",
          "title": "JSONPlaceholder /posts API Testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get all posts",
              "fullTitle": "JSONPlaceholder /posts API Testing get all posts",
              "timedOut": null,
              "duration": 808,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.getallPost)().then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array');\n  expect(response.body.length).to.be.greaterThan(0);\n});",
              "err": {},
              "uuid": "30797995-bd1e-4741-a8c7-b6b845c006cb",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get single post by ID",
              "fullTitle": "JSONPlaceholder /posts API Testing get single post by ID",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.getpostById)(1).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('id', 1);\n});",
              "err": {},
              "uuid": "0f14fe90-34de-446d-bddb-31d9e4835603",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get single post by invalid ID",
              "fullTitle": "JSONPlaceholder /posts API Testing get single post by invalid ID",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.getpostInvalidId)(3333).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "f00141e2-c3d2-4f2f-8620-5b45c5779ca7",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get all comments",
              "fullTitle": "JSONPlaceholder /posts API Testing get all comments",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.getallComment)().then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.an('array');\n});",
              "err": {},
              "uuid": "9ce6791a-456c-4aaa-959c-8ab91e903e2f",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get comment by ID",
              "fullTitle": "JSONPlaceholder /posts API Testing get comment by ID",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.getcommentById)(3).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('id', 3);\n});",
              "err": {},
              "uuid": "624c005e-672a-4fb5-a3ec-7e60775ba0e0",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create a new post",
              "fullTitle": "JSONPlaceholder /posts API Testing create a new post",
              "timedOut": null,
              "duration": 795,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newpost = {\n  title: 'New Post',\n  body: 'Post ad by huzaifa',\n  userId: 1\n};\n(0, _postAPIcall.createPost)(newpost).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.include(newpost);\n});",
              "err": {},
              "uuid": "0dff2747-50a6-4aeb-88c9-ff852f45a558",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create post with empty body",
              "fullTitle": "JSONPlaceholder /posts API Testing create post with empty body",
              "timedOut": null,
              "duration": 774,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.createPost)({}).then(response => {\n  expect(response.status).to.eq(201);\n});",
              "err": {},
              "uuid": "b2c6a28d-8a05-422e-886d-784d186c43e0",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "update post",
              "fullTitle": "JSONPlaceholder /posts API Testing update post",
              "timedOut": null,
              "duration": 793,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedPost = {\n  id: 2,\n  title: 'New',\n  body: 'Updated',\n  userId: 2\n};\n(0, _postAPIcall.updatePost)(2, updatedPost).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.include(updatedPost);\n});",
              "err": {},
              "uuid": "af0dd1ed-6fc4-4b97-a36b-8a9ab010a049",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE post",
              "fullTitle": "JSONPlaceholder /posts API Testing DELETE post",
              "timedOut": null,
              "duration": 830,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _postAPIcall.deletePost)(1).then(response => {\n  expect([200]).to.include(response.status);\n});",
              "err": {},
              "uuid": "0484d3d0-6b16-4b6c-ab09-27780a1b2f3d",
              "parentUUID": "7e483da7-8117-4795-8118-872784fcafc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30797995-bd1e-4741-a8c7-b6b845c006cb",
            "0f14fe90-34de-446d-bddb-31d9e4835603",
            "f00141e2-c3d2-4f2f-8620-5b45c5779ca7",
            "9ce6791a-456c-4aaa-959c-8ab91e903e2f",
            "624c005e-672a-4fb5-a3ec-7e60775ba0e0",
            "0dff2747-50a6-4aeb-88c9-ff852f45a558",
            "b2c6a28d-8a05-422e-886d-784d186c43e0",
            "af0dd1ed-6fc4-4b97-a36b-8a9ab010a049",
            "0484d3d0-6b16-4b6c-ab09-27780a1b2f3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": "true",
        "overwrite": "false",
        "html": "true",
        "json": "true",
        "repDir": "cypress/reports"
      },
      "version": "6.2.0"
    }
  }
}